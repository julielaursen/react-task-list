{"ast":null,"code":"var _jsxFileName = \"/Users/julielaursen/Workspace/react-task-list/react-task-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport About from './components/About';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  // fetch data\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  };\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    console.log(res.status);\n    setTasks([...tasks, data]);\n  };\n  const deleteTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    res.status === 200 ? setTasks(tasks.filter(task => task.id !== id)) : alert('Error Deleting This Task');\n  };\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = {\n      ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: data.reminder\n    } : task));\n  };\n  return (\n    /*#__PURE__*/\n    //<Routes>\n    //<Router>\n    _jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddTask(!showAddTask),\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n        onAdd: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 27\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks,\n        onDelete: deleteTask,\n        onToggle: toggleReminder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this) : 'There are no tasks', /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n    //</Router>\n    // </Routes>\n  );\n};\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Footer","Tasks","AddTask","About","BrowserRouter","Router","Route","Routes","useState","useEffect","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","console","log","status","deleteTask","filter","alert","toggleReminder","taskToToggle","updTask","reminder","map","length"],"sources":["/Users/julielaursen/Workspace/react-task-list/react-task-tracker/src/App.js"],"sourcesContent":["import Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // fetch data\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n    console.log(res.status)\n    setTasks([...tasks, data])\n  }\n\n  const deleteTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n    })\n\n    res.status === 200\n      ? setTasks(tasks.filter((task) => task.id !== id))\n      : alert('Error Deleting This Task')\n  }\n\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updTask),\n    })\n\n    const data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task,\n      ),\n    )\n  }\n\n  return (\n    //<Routes>\n      //<Router>\n        <div className=\"container\">\n          <Header\n            onAdd={() => setShowAddTask(!showAddTask)}\n            showAdd={showAddTask}\n          />\n          {showAddTask && <AddTask onAdd={addTask} />}\n          {tasks.length > 0 ? (\n            <Tasks\n              tasks={tasks}\n              onDelete={deleteTask}\n              onToggle={toggleReminder}\n            />\n          ) : (\n            'There are no tasks'\n          )}\n          <Route path='/about' element={About}/>\n          <Footer />\n        </div>\n      //</Router>\n   // </Routes>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}