{"ast":null,"code":"var _jsxFileName = \"/Users/julielaursen/Workspace/react-task-list/react-task-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { FaExpandArrowsAlt } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  // fetch data\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  };\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n  const addTask = async task => {\n    // const id = Math.floor(Math.random() * 1000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n\n    const res = await fetch('http://localhost.com/5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  };\n  const deleteTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    res.status === 200 ? setTasks(tasks.filter(task => task.id !== id)) : alert('Error Deleting This Task');\n  };\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : 'There are no tasks']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Tasks","AddTask","BrowserRouter","Router","Route","Routes","useState","useEffect","FaExpandArrowsAlt","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","status","filter","alert","toggleReminder","map","reminder","length"],"sources":["/Users/julielaursen/Workspace/react-task-list/react-task-tracker/src/App.js"],"sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport { FaExpandArrowsAlt } from 'react-icons/fa'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // fetch data\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  const addTask = async (task) => {\n    // const id = Math.floor(Math.random() * 1000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n\n    const res = await fetch('http://localhost.com/5000/tasks', {\n      method: 'POST', \n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n    const data = await res.json()\n    setTasks([...tasks, data])\n  }\n\n  const deleteTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`,\n     { method: 'DELETE',\n     })\n \n    res.status === 200 ?\n    setTasks(tasks.filter((task) => task.id !== id))\n    : alert('Error Deleting This Task')\n  }\n\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task,\n      ),\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        'There are no tasks'\n      )}\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}