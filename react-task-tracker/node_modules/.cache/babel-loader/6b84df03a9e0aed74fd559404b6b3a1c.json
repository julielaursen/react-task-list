{"ast":null,"code":"var _jsxFileName = \"/Users/julielaursen/Workspace/react-task-list/react-task-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport About from './components/About';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  // fetch data\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  };\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    console.log(res.status);\n    setTasks([...tasks, data]);\n  };\n  const deleteTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    res.status === 200 ? setTasks(tasks.filter(task => task.id !== id)) : alert('Error Deleting This Task');\n  };\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = {\n      ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: data.reminder\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onAdd: () => setShowAddTask(!showAddTask),\n          showAdd: showAddTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n                onAdd: addTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n                tasks: tasks,\n                onDelete: deleteTask,\n                onToggle: toggleReminder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this) : 'No Tasks To Show']\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Footer","Tasks","AddTask","About","BrowserRouter","Router","Route","Routes","useState","useEffect","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","console","log","status","deleteTask","filter","alert","toggleReminder","taskToToggle","updTask","reminder","map","length"],"sources":["/Users/julielaursen/Workspace/react-task-list/react-task-tracker/src/App.js"],"sourcesContent":["import Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // fetch data\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n    console.log(res.status)\n    setTasks([...tasks, data])\n  }\n\n  const deleteTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n    })\n\n    res.status === 200\n      ? setTasks(tasks.filter((task) => task.id !== id))\n      : alert('Error Deleting This Task')\n  }\n\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updTask),\n    })\n\n    const data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task,\n      ),\n    )\n  }\n\n  return (\n    <Router>\n      <div>\n  \n      \n      <div className='container'>\n        \n      \n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        <Routes>\n          <Route\n            path='/'\n            element={\n              <>\n                {showAddTask && <AddTask onAdd={addTask} />}\n                {tasks.length > 0 ? (\n                  <Tasks\n                    tasks={tasks}\n                    onDelete={deleteTask}\n                    onToggle={toggleReminder}\n                  />\n                ) : (\n                  'No Tasks To Show'\n                )}\n              </>\n            }\n          />\n          <Route path='/about' element={<About />} />\n        </Routes>\n        <Footer />\n      </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}